// Script para probar la conexi√≥n del frontend con la API
const API_URL = 'http://localhost:8080/api';

async function testAPI() {
  console.log('üß™ Probando conexi√≥n API desde frontend...\n');

  // 1. Probar endpoint de test
  console.log('1. Probando endpoint de test...');
  try {
    const testResponse = await fetch(`${API_URL}/test`);
    const testData = await testResponse.json();
    console.log('‚úÖ Test endpoint:', testData);
  } catch (error) {
    console.log('‚ùå Error en test endpoint:', error.message);
  }

  // 2. Probar endpoint de honorarios
  console.log('\n2. Probando endpoint de honorarios...');
  try {
    const honorariosResponse = await fetch(`${API_URL}/honorarios`);
    const honorariosData = await honorariosResponse.json();
    console.log('‚úÖ Honorarios endpoint:', honorariosData);
    
    if (honorariosData.categorias) {
      console.log(`üìä Categor√≠as encontradas: ${honorariosData.categorias.length}`);
      honorariosData.categorias.forEach((cat, index) => {
        console.log(`  ${index + 1}. ${cat.nombre} (${cat.servicios?.length || 0} servicios)`);
      });
    } else {
      console.log('‚ö†Ô∏è  No se encontraron categor√≠as en la respuesta');
    }
  } catch (error) {
    console.log('‚ùå Error en honorarios endpoint:', error.message);
  }

  // 3. Probar endpoint de configuraci√≥n
  console.log('\n3. Probando endpoint de configuraci√≥n...');
  try {
    const configResponse = await fetch(`${API_URL}/honorarios/configuracion`);
    const configData = await configResponse.json();
    console.log('‚úÖ Configuraci√≥n endpoint:', configData);
  } catch (error) {
    console.log('‚ùå Error en configuraci√≥n endpoint:', error.message);
  }

  console.log('\nüéØ Pruebas completadas!');
}

// Ejecutar pruebas
testAPI(); 
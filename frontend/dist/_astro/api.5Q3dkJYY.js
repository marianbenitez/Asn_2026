const i={API_URL:"http://localhost:8080/api",DEBUG:!0,NODE_ENV:"development",IS_DEV:!1,IS_PROD:!0},h={development:{API_URL:"http://localhost:8080/api",DEBUG:!0},production:{API_URL:"https://tu-dominio.com/api",DEBUG:!1}},d=()=>{const o=i.NODE_ENV;return{...h[o],...i}},u=d(),g=u.API_URL,l=u.DEBUG;class p{constructor(){this.baseURL=g,this.debug=l,this.authToken=null}setAuthToken(e){this.authToken=e}loadToken(){const e=localStorage.getItem("authToken");return e&&(this.authToken=e),e}async request(e,t={}){try{const r=`${this.baseURL}${e}`,s={"Content-Type":"application/json",...t.headers};this.authToken&&(s.Authorization=`Bearer ${this.authToken}`),this.debug&&console.log("Making request to:",r,{...t,headers:s});const n=await fetch(r,{...t,headers:s});if(!n.ok){const c=await n.json().catch(()=>({}));throw new Error(c.message||`HTTP error! status: ${n.status}`)}const a=await n.json();return this.debug&&console.log("Response received:",a),a}catch(r){throw this.debug&&console.error("API Error:",r),r}}async get(e){return this.request(e,{method:"GET"})}async post(e,t){return this.request(e,{method:"POST",body:JSON.stringify(t)})}async put(e,t){return this.request(e,{method:"PUT",body:JSON.stringify(t)})}async delete(e){return this.request(e,{method:"DELETE"})}async login(e){try{const t=await this.post("/login",e);return t.token&&(localStorage.setItem("authToken",t.token),this.setAuthToken(t.token)),{success:!0,message:t.message,token:t.token,user:t.user||null}}catch(t){throw this.debug&&console.error("Login error:",t),t}}async logout(){try{return localStorage.removeItem("authToken"),this.setAuthToken(null),{success:!0,message:"Logout successful"}}catch(e){throw this.debug&&console.error("Logout error:",e),e}}async register(e){try{return await this.post("/users",e)}catch(t){throw this.debug&&console.error("Register error:",t),t}}async testConnection(){return this.get("/test")}async testProtected(){return this.get("/test/protected")}async getUsers(){return this.get("/users")}async getNews(e=1,t=10,r=""){const s=new URLSearchParams;return e&&s.append("page",e),t&&s.append("limit",t),r&&s.append("search",r),this.get(`/news?${s.toString()}`)}async getFeaturedNews(e=3){return this.get(`/news/featured?limit=${e}`)}async getRecentNews(e=5){return this.get(`/news/recent?limit=${e}`)}async getNewsDetail(e){return this.get(`/news/${e}`)}async getAdminNews(e=1,t=10,r=""){const s=new URLSearchParams;return e&&s.append("page",e),t&&s.append("limit",t),r&&s.append("search",r),this.get(`/admin/news?${s.toString()}`)}async createNews(e){return this.request("/admin/news",{method:"POST",body:e,headers:{Authorization:this.authToken?`Bearer ${this.authToken}`:void 0}})}async updateNews(e,t){return this.request(`/admin/news/${e}`,{method:"PUT",body:t,headers:{Authorization:this.authToken?`Bearer ${this.authToken}`:void 0}})}async deleteNews(e){return this.delete(`/admin/news/${e}`)}}const m=new p;export{m as a};
